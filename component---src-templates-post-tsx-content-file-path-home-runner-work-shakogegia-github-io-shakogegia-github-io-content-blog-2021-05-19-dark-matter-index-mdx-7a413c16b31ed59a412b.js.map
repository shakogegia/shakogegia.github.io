{"version":3,"file":"component---src-templates-post-tsx-content-file-path-home-runner-work-shakogegia-github-io-shakogegia-github-io-content-blog-2021-05-19-dark-matter-index-mdx-7a413c16b31ed59a412b.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/cover.tsx","webpack://my-gatsby-site/./content/blog/2021-05-19-dark-matter/images/dark-matter.jpeg","webpack://my-gatsby-site/./content/blog/2021-05-19-dark-matter/images/recursion.webp","webpack://my-gatsby-site/./content/blog/2021-05-19-dark-matter/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React, { PropsWithChildren } from 'react'\nimport classNames from 'src/utils/classnames'\n\ntype Props = {\n  src: string\n  title?: string\n  className?: string\n  size?: 'small' | 'medium' | 'large'\n}\n\nconst sizes = {\n  small: 'w-[198px] h-[298px]',\n  medium: 'w-[300px] h-[455px]',\n  large: 'w-[325px] h-[500px]',\n}\n\nexport default function Cover({ src, className, title, size = \"medium\", children }: PropsWithChildren<Props>) {\n  return (\n    <div className={classNames(sizes[size], className)}>\n      <div className='rounded overflow-hidden cover-wrapper relative'>\n        <span className={classNames('relative block',\n        \"after:content-[' '] after:absolute after:inset-0 after:rounded after:pointer-events-none\",\n        'cover-after h-full'\n        )}>\n          <img\n            className={classNames('rounded block object-cover m-0 no-lightense', sizes[size])}\n            src={src}\n            alt={title}\n            loading=\"lazy\"\n          />\n        </span>\n        <div className='absolute inset-0 rounded overflow-hidden'>\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","export default __webpack_public_path__ + \"static/dark-matter-99f7caf6e3e334d51a4dc942327a3018.jpeg\";","export default __webpack_public_path__ + \"static/recursion-578e346b1a201677ca31bc7bbc17de1b.webp\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Cover from 'src/components/cover';\nimport DarkMatter from './images/dark-matter.jpeg';\nimport Recursion from './images/recursion.webp';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h4: \"h4\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    align: \"middle\"\n  }, React.createElement(Cover, {\n    className: \"w-[300px] mb-16\",\n    src: DarkMatter\n  })), \"\\n\", React.createElement(_components.h4, null, \"\\\"Are you happy with your life?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"A question that has come to many of us and puzzled us. Are you happy with your life? What would your life be like at different times and moments in the past to make other opposite choices? We may not understand this anymore, but imagine a life where your best or worst version lives the life you could have had. Who knows, maybe you will not have such a bad life as you think.\"), \"\\n\", React.createElement(_components.p, null, \"In this exciting book, Blake Crouch offers a multi-world where our lives are torn apart by the decisions we make. I discovered the book by accident and liked it very much. Recommend that you read Sci-fi lovers. I will be honest and tell fyou that this book and in general Blake's books reminded me of my all-time favorite science fiction writer, Philip Dick, and never read books more similar before in terms of style. I think Philip Dick fans will like it.\"), \"\\n\", React.createElement(_components.p, null, \"The impressions of the book followed me for a good long time. I was looking for books like this and I stumbled upon one of those book fans on Reddit whose story made me happy.\"), \"\\n\", React.createElement(\"p\", {\n    align: \"center\"\n  }, React.createElement(\"img\", {\n    src: \"https://zolianipanda.files.wordpress.com/2019/05/cleanshot-2019-05-09-at-13.55.19402x.png?w=663&h=203&zoom=2\"\n  }), React.createElement(\"em\", null, \"Post on Reddit\")), \"\\n\", React.createElement(_components.p, null, \"After reading the book, I read other ones by the author as well, and The Wayward Pines Trilogy also turned out to be catchy and interesting. A TV series of the same name is based on this story.\"), \"\\n\", React.createElement(_components.p, null, \"Despite my admiration for this book on Reddit, readers' opinions were quite divided. I have found people like me who admire this book. A few of my friends also read this book and were satisfied.\"), \"\\n\", React.createElement(_components.p, null, \"You can also check out the author's \", React.createElement(_components.a, {\n    href: \"https://www.reddit.com/r/books/comments/6khslt/im_blake_crouch_author_of_the_wayward_pines/\"\n  }, \"AMA\"), \" (Ask Me Anything) Blake Crouch AMA On Reddit, where Blake himself answers readers' questions about his books.\"), \"\\n\", React.createElement(\"p\", {\n    align: \"center\"\n  }, React.createElement(\"img\", {\n    class: \"rounded-md\",\n    src: \"https://pbs.twimg.com/media/FODxClmVcAYi5wi?format=jpg&name=small\"\n  }), React.createElement(\"em\", null, \"Interior for Dark Matter - illustration by \", React.createElement(\"a\", {\n    href: \"https://twitter.com/blakecrouch1/status/1504477293002981381\",\n    target: \"_blank\"\n  }, \"Hilary Clarcq\"))), \"\\n\", React.createElement(_components.p, null, \"In 2014, before dark matter saw the light of day, Sony Pictures acquired the rights to make the film, although the fate of the book's film adaptation is still unknown. There was also the idea to shoot a TV series instead of a movie. The series can be exciting when Jason moves to different worlds and visits alternate worlds.\"), \"\\n\", React.createElement(_components.p, null, \"On June 11th we will see another book by Blake Crouch - \", React.createElement(_components.a, {\n    href: \"https://www.goodreads.com/book/show/42046112-recursion\"\n  }, \"Recursion\"), \", which I am sure will be just as entertaining and interesting as \\\"Dark Matter\\\"\"), \"\\n\", React.createElement(\"div\", {\n    align: \"middle\",\n    class: \"mb-20\"\n  }, React.createElement(Cover, {\n    src: Recursion\n  })), \"\\n\", React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"300\",\n    scrolling: \"no\",\n    frameborder: \"no\",\n    src: \"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/73799584&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/shakogegia.github.io/shakogegia.github.io/content/blog/2021-05-19-dark-matter/index.mdx\";\nimport {motion} from 'framer-motion';\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-left lg:text-center text-3xl leading-10 font-duospace-bold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(motion.div, {\n    initial: \"hidden\",\n    animate: \"show\",\n    whileInView: \"show\",\n    variants: {\n      hidden: {\n        opacity: 0,\n        y: -10\n      },\n      show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n          type: 'spring'\n        }\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg font-duospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children)), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight font-mono text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 font-duospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["sizes","small","medium","large","Cover","src","className","title","size","children","React","classNames","alt","loading","_createMdxContent","props","_components","Object","assign","h4","p","a","_provideComponents","components","align","DarkMatter","href","class","target","Recursion","width","height","scrolling","frameborder","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","Layout","SEO","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","pathname","slug","article","motion","initial","animate","whileInView","variants","hidden","opacity","y","show","transition","type","date","Share","text","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","query","IoWaterOutline","IoWater","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}