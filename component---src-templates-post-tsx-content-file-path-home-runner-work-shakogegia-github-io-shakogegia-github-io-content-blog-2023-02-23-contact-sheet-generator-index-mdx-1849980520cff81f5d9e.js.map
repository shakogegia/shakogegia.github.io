{"version":3,"file":"component---src-templates-post-tsx-content-file-path-home-runner-work-shakogegia-github-io-shakogegia-github-io-content-blog-2023-02-23-contact-sheet-generator-index-mdx-1849980520cff81f5d9e.js","mappings":"wLAAA,EAAe,IAA0B,8DCAzC,EAAe,IAA0B,8DCAzC,EAAe,IAA0B,8DCAzC,EAAe,IAA0B,8DCAzC,EAAe,IAA0B,yD,UCSzC,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,MAAO,CAC1EC,IAAKC,IACH,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qBAAsB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kJAAmJI,EAAAA,cAAoBP,EAAYI,EAAG,CAC5SM,KAAM,+BACL,uBAAwB,KAAM,KAAMH,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2IAA4I,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kNAAmN,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uMAAwM,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yDAA0D,KAAMI,EAAAA,cAAoB,MAAO,CAC71BI,MAAO,uBACNJ,EAAAA,cAAoB,SAAU,CAC/BK,MAAO,MACPC,OAAQ,MACRL,IAAK,4CACLM,MAAO,uBACPC,YAAa,IACbC,MAAO,sGACPC,iBAAiB,KACd,KAAMV,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gFAAiF,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WAAY,KAAMI,EAAAA,cAAoBW,EAAAA,EAAS,CACjOC,OAAQ,CAACC,EAAeC,EAAeC,EAAeC,KAE1D,CAKA,MAJA,SAAoBxB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOmB,EAAYlB,EAAAA,cAAoBkB,EAAW1B,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCC7BA,SAAS2B,EAAKC,GACZ,IAAIC,EAAuBC,EAC3B,IAAKC,MAAM,KAACC,EAAI,IAAEC,GAAMC,aAAa,KAACC,EAAI,KAAEC,GAAK,SAAEC,GAAYT,EAC/D,OAAOpB,EAAAA,cAAoB8B,EAAAA,EAAQ,KAAM9B,EAAAA,cAAoB+B,EAAAA,EAAK,CAChExB,MAAOkB,EAAIO,YAAYzB,MACvB0B,YAAaR,EAAIS,QACjBC,MAA4D,QAApDd,EAAwBI,EAAIO,YAAYI,cAA8C,IAA1Bf,GAAiH,QAApEC,EAAyBD,EAAsBgB,uBAAwD,IAA3Bf,OAAtF,EAAmIA,EAAuBgB,MAAMrC,IACvQsC,SAAU,IAAMd,EAAIO,YAAYQ,KAChCC,SAAS,IACPzC,EAAAA,cAAoB,MAAO,CAC7B0C,UAAW,yBACV1C,EAAAA,cAAoB,KAAM,CAC3B0C,UAAW,wGACVjB,EAAIO,YAAYzB,OAAQP,EAAAA,cAAoB2C,EAAAA,EAAAA,IAAY,CACzDC,QAAS,SACTC,QAAS,OACTC,YAAa,OACbC,SAAU,CACRC,OAAQ,CACNC,QAAS,EACTC,GAAI,IAENC,KAAM,CACJF,QAAS,EACTC,EAAG,EACHE,WAAY,CACVC,KAAM,aAIXrD,EAAAA,cAAoB,MAAO,CAC5B0C,UAAW,qOACVb,IAAY7B,EAAAA,cAAoB,MAAO,CACxC0C,UAAW,SACV1C,EAAAA,cAAoB,KAAM,CAC3B0C,UAAW,2CACV,gBAAiBjB,EAAIO,YAAYsB,OAAQtD,EAAAA,cAAoB,MAAO,CACrE0C,UAAW,SACV1C,EAAAA,cAAoB,MAAO,CAC5B0C,UAAW,4EACR1C,EAAAA,cAAoB,MAAO,CAC9B0C,UAAW,SACV1C,EAAAA,cAAoBuD,EAAAA,EAAO,CAC5BC,KAAM/B,EAAIO,YAAYzB,MACtBkD,IAAK,IAAMhC,EAAIO,YAAYQ,SAE/B,CACe,SAASkB,EAAiBlE,GACvC,OAAOQ,EAAAA,cAAoBmB,EAAM3B,EAAOQ,EAAAA,cAAoB2D,EAAqBnE,GACnF,C,+ECpDe,SAASmB,EAAQnB,GAC9B,OACEQ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAK0C,UAAU,6EACZlD,EAAMqC,SACHrC,EAAMqC,UACLrC,EAAMoB,QAAU,IAAIgD,KAAK3D,GACxBD,EAAAA,cAAAA,MAAAA,CACE6D,QAAQ,OACRC,IAAK7D,EACLyC,WAAWqB,EAAAA,EAAAA,GACT,wCACA,gBACAvE,EAAMkD,WAERzC,IAAKA,OAMrB,C,wFCpBe,SAASsD,EAAM/D,GAAuC,IAAD,IAClE,MAAM,KAAEgC,IAASwC,EAAAA,EAAAA,gBAAeC,GAEhC,OACEjE,EAAAA,cAAAA,MAAAA,CAAK0C,UAAU,wCACb1C,EAAAA,cAAAA,MAAAA,CAAK0C,UAAU,0DACb1C,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACkE,EAAAA,IAAc,CAACxB,UAAU,oDAC1B1C,EAAAA,cAACmE,EAAAA,IAAO,CAACzB,UAAU,qDAErB1C,EAAAA,cAAAA,IAAAA,CACE0C,UAAU,sCACVvC,KAAI,yCAA0CqB,SAAkB,QAAd,EAAJA,EAAM4C,oBAAY,WAAd,EAAJC,EAAoBC,SAAUC,mBAAmB/E,EAAMiE,KAAI,SAASc,mBAChH/E,EAAMgE,MACP,SAAQhC,SAAkB,QAAd,EAAJA,EAAM4C,oBAAY,WAAd,EAAJI,EAAoBC,gBAAgBC,QAAQ,IAAK,MAE1D1E,EAAAA,cAAAA,OAAAA,CAAM0C,UAAU,aAAW,cAAkB,0EAE/C1C,EAAAA,cAAAA,OAAAA,CAAM0C,UAAU,mCAAiC,0CAIzD,CAEA,MAAMuB,EAAK,Y,sECIJ,MAAMU,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB7E,GAC/B,MAAM8E,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAf5E,EACFA,EAAW8E,GAGb,IAAIA,KAAsB9E,IAChC,CAAC8E,EAAmB9E,GACzB,C","sources":["webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/images/contact-sheet-1.png","webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/images/contact-sheet-2.png","webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/images/contact-sheet-3.png","webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/images/contact-sheet-4.png","webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/images/screenshot.png","webpack://my-gatsby-site/./content/blog/2023-02-23-contact-sheet-generator/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/gallery.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/contact-sheet-1-e5a844479485767cf55e3b49b5dcaef9.png\";","export default __webpack_public_path__ + \"static/contact-sheet-2-ce18ed3885d89005f926235c964cfa26.png\";","export default __webpack_public_path__ + \"static/contact-sheet-3-b877641c22049a1bd343564bf2b1894c.png\";","export default __webpack_public_path__ + \"static/contact-sheet-4-cae5cd23574229ef04dde897abf1ff4d.png\";","export default __webpack_public_path__ + \"static/screenshot-d09bcc5846bb27dcf90abc05be537e25.png\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport ContactSheet1 from \"./images/contact-sheet-1.png\";\nimport ContactSheet2 from \"./images/contact-sheet-2.png\";\nimport ContactSheet3 from \"./images/contact-sheet-3.png\";\nimport ContactSheet4 from \"./images/contact-sheet-4.png\";\nimport Screenshot from \"./images/screenshot.png\";\nimport Gallery from \"src/components/gallery\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    src: Screenshot\n  }), \"\\n\", React.createElement(_components.p, null, \"Hi film shooters!\"), \"\\n\", React.createElement(_components.p, null, \"I've been working on a simple tool to generate contact sheets from your film scans.\\nIt's called Contact Sheet Generator and it's available at \", React.createElement(_components.a, {\n    href: \"https://contactsheet.photos\"\n  }, \"contactsheet.photos\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"There are some predefined styles included to choose from, and you can also customize the layout, the size, the spacing, and the colors.\"), \"\\n\", React.createElement(_components.p, null, \"This is a free web app, and also I wanted to mention that it does not upload your images to any server, never saved anywhere, it's all done in your browser,\\nso once you close the tab, your images are gone.\"), \"\\n\", React.createElement(_components.p, null, \"In the future, if there is enough interest, I might add some features, and also maybe build a plugin for Lightroom or Capture One. I'm not familiar with programming for those apps, but let's see.\"), \"\\n\", React.createElement(_components.p, null, \"Here is a short video recording of the app in action:\"), \"\\n\", React.createElement(\"div\", {\n    class: \"flex justify-center\"\n  }, React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/vOqmo4uHGgU\",\n    title: \"YouTube video player\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    allowfullscreen: true\n  })), \"\\n\", React.createElement(_components.p, null, \"I hope you find it useful, and if you have any feedback, please let me know!\"), \"\\n\", React.createElement(_components.p, null, \"Cheers!\"), \"\\n\", React.createElement(Gallery, {\n    images: [ContactSheet1, ContactSheet2, ContactSheet3, ContactSheet4]\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/shakogegia.github.io/shakogegia.github.io/content/blog/2023-02-23-contact-sheet-generator/index.mdx\";\nimport {motion} from 'framer-motion';\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-left lg:text-center text-3xl leading-10 font-duospace-bold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(motion.div, {\n    initial: \"hidden\",\n    animate: \"show\",\n    whileInView: \"show\",\n    variants: {\n      hidden: {\n        opacity: 0,\n        y: -10\n      },\n      show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n          type: 'spring'\n        }\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg font-duospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children)), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight font-mono text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React, { PropsWithChildren } from 'react'\nimport classNames from 'src/utils/classnames'\n\nexport default function Gallery(props: PropsWithChildren<{ images?: string[]; className?: string }>) {\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 justify-items-center\">\n        {props.children\n          ? props.children\n          : (props.images || []).map((src) => (\n              <img\n                loading=\"lazy\"\n                key={src}\n                className={classNames(\n                  'rounded-lg w-full h-full object-cover',\n                  \"w-64 h-64 m-0\",\n                  props.className\n                )}\n                src={src}\n              />\n            ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 font-duospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","src","Screenshot","href","class","width","height","title","frameborder","allow","allowfullscreen","Gallery","images","ContactSheet1","ContactSheet2","ContactSheet3","ContactSheet4","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","children","Layout","SEO","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","pathname","slug","article","className","motion","initial","animate","whileInView","variants","hidden","opacity","y","show","transition","type","date","Share","text","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","map","loading","key","classNames","useStaticQuery","query","IoWaterOutline","IoWater","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}