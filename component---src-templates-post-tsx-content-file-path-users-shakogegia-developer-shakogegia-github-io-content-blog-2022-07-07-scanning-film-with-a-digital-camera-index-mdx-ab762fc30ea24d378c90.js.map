{"version":3,"file":"component---src-templates-post-tsx-content-file-path-users-shakogegia-developer-shakogegia-github-io-content-blog-2022-07-07-scanning-film-with-a-digital-camera-index-mdx-ab762fc30ea24d378c90.js","mappings":"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","sources":["webpack://my-gatsby-site/./content/blog/2022-07-07-scanning-film-with-a-digital-camera/images/scan_1.jpeg","webpack://my-gatsby-site/./content/blog/2022-07-07-scanning-film-with-a-digital-camera/images/scan_2.jpeg","webpack://my-gatsby-site/./content/blog/2022-07-07-scanning-film-with-a-digital-camera/images/scan_3.jpeg","webpack://my-gatsby-site/./content/blog/2022-07-07-scanning-film-with-a-digital-camera/images/scan_4.jpeg","webpack://my-gatsby-site/./content/blog/2022-07-07-scanning-film-with-a-digital-camera/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/gallery.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/scan_1-9e6dc1e34642c9a5b1da0f1135268054.jpeg\";","export default __webpack_public_path__ + \"static/scan_2-93ee2d7f6a1f134c0ada1bd95ef215f6.jpeg\";","export default __webpack_public_path__ + \"static/scan_3-6c270463170088c7646d1a6b7376f999.jpeg\";","export default __webpack_public_path__ + \"static/scan_4-9fe7c62940e455c312a20141c76a8209.jpeg\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport scan_1 from \"./images/scan_1.jpeg\";\nimport scan_2 from \"./images/scan_2.jpeg\";\nimport scan_3 from \"./images/scan_3.jpeg\";\nimport scan_4 from \"./images/scan_4.jpeg\";\nimport Gallery from \"src/components/gallery\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h4: \"h4\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    img: \"img\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"In this day and age, if you are a film shooter, you know that digitalizing film is inevitable. Sure, it's great fun to have a darkroom and play with silver gelatin prints for both color and B&W, but let's face it, we all have Instagram and want to share our work with the rest of the world. If you are lucky enough to have the film scanned at your local lab, great, but prices are \", React.createElement(_components.a, {\n    href: \"https://silvergrainclassics.com/en/2021/10/film-prices-analysed/\"\n  }, \"going higher and higher\"), \", so to get those images on your device, you need some setup to scan them.\"), \"\\n\", React.createElement(_components.p, null, \"The cheapest one is to buy one of the flatbed scanners, like Epson V600, but for 35mm film, I did not get the results I wanted. Another option is to get a dedicated film scanner from Nikon, Minolta, and others, but people sell them for mental prices and are out of budget for me. So here comes the option of scanning with the digital camera.\"), \"\\n\", React.createElement(_components.p, null, \"A few components of which setup consists are a \", React.createElement(_components.a, {\n    href: \"#camera\"\n  }, React.createElement(_components.strong, null, \"camera\")), \", a \", React.createElement(_components.a, {\n    href: \"#lens\"\n  }, React.createElement(_components.strong, null, \"lens\")), \" with macro capability; some \", React.createElement(_components.a, {\n    href: \"#stand\"\n  }, React.createElement(_components.strong, null, \"stand\")), \" to hold the camera, a \", React.createElement(_components.a, {\n    href: \"#film_holder\"\n  }, React.createElement(_components.strong, null, \"film holder\")), \", and a \", React.createElement(_components.a, {\n    href: \"https://#light_source\"\n  }, React.createElement(_components.strong, null, \"light source\")), \". let's break it down each by one\"), \"\\n\", React.createElement(_components.h4, null, \"Camera\"), \"\\n\", React.createElement(_components.p, null, \"I use cropped sensor mirrorless Sony a6400, but you can use any camera with an interchangeable lens, whether it's DSLR or mirrorless, full-frame, or cropped sensor.\"), \"\\n\", React.createElement(_components.h4, null, \"Lens\"), \"\\n\", React.createElement(_components.p, null, \"To me, this is the crucial part. Here we have a few options, but it needs to be a macro-capable one. One of the most popular options is to buy Nikkor 55 ⨐2.8 AI-S Micro, which is not very expensive and seems to be a good option, but I already own some enlargers and enlarger lenses. I chose the enlarger lens El-Nikkor ⨐ 2.8, a cheap lens that produces excellent images. The cool thing about the enlarger lenses is that it's built for projecting flat images and as our film is also flat, or at least it should be 🙃, this will be a good fit for us.\"), \"\\n\", React.createElement(_components.p, null, \"To mount an enlarger lens on the camera, we need some adapters. The lens has an M39 Leica mount (as most the enlarger lenses do), and my camera (Sony a6400) has a Sony E-mount bayonet. You might think buying an M39 to Sony E-mount adapter would do the job, but wait for a second; we are not yet there. The lens does not have any mechanism to focus, so you need to physically change the distance to the subject and get closer or far from it to focus on it. An excellent tool for that is called a \\\"focusing helicoid adapter\\\" to make our life easier. You can find it for different mount types. Still, I find the M42-to-M42 version easiest and cheapest to bye. as it is an M42 mount and the lens has M39, I bought an M39 to M42 adapter wing, which is dirt cheap, and instead of M39 to Sony E adapter, I brought M42 to Sony E adapter. This whole information may sound intimidating, but it's not.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Another cheap option for “easy focusing” and also for macro photography is to buy some kind of so-called 'Bellows,' which I'll explore later\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"So these are the final lens mount system:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Lens El-Nikkor f2.8\"), \"\\n\", React.createElement(_components.li, null, \"M39 to M42 Adapter\"), \"\\n\", React.createElement(_components.li, null, \"M42 to M42 focusing helicoid adapter\"), \"\\n\", React.createElement(_components.li, null, \"M42 to Sony E mount adapter\"), \"\\n\"), \"\\n\", React.createElement(\"div\", {\n    class: \"flex flex-wrap justify-center\"\n  }, React.createElement(\"img\", {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/E97EA553-6561-4516-AF95-7CA043074197_2/dxP6kLHWNXzDYghfy0j75yh7Q8odq7IRl3jqtgEvJDIz/373972_01_1000x1000.jpeg\",\n    width: \"180\",\n    alt: \"Lens El-Nikkor f2.8\"\n  }), React.createElement(\"img\", {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/B2ADC36E-770D-42A2-B837-A780EA8F0B49_2/iTokux5ZDNhHeO1mht89RzQlOtlI3HVkhvkNVyaaRPkz/m39m42.jpeg\",\n    width: \"180\",\n    alt: \"M39 to M42 Adapter\"\n  }), React.createElement(\"img\", {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/44FDC1D6-8D81-4431-9D41-19A138F58647_2/x9zBk0O1SYiJ5LCzVAQNba6AK5d4YxvXrUUvpz1Zjqgz/M42-M42-MCR-01_1400x.jpeg\",\n    width: \"180\",\n    alt: \"M42 to M42 focusing helicoid adapter\"\n  }), React.createElement(\"img\", {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/0F1E5C89-81DE-49B6-A5A4-7BD15378E8D7_2/yphvqiNCkhhnv6Zb9ToWXrqsPPFBq1j1hBDpcgPHx4Ez/m42nex.jpeg\",\n    width: \"180\",\n    alt: \"M42 to Sony E mount adapter\"\n  })), \"\\n\", React.createElement(_components.h4, null, \"Stand\"), \"\\n\", React.createElement(_components.p, null, \"When it comes to stand, first what comes to mind is a tripod, which I already own. While it may be somewhat sturdy, legs always get in my way and never really is the comfortable way to use it. Also, we need to hold the camera pointing lens down towards the film, and if you don't already possess a perfect and flexible one, my suggestion would be: don't go that way.\"), \"\\n\", React.createElement(_components.p, null, \"Other than a tripod, copy-stands seemed an excellent and reliable solution, but copy-stands from Kaiser or other brands can get expensive. So I decided to make one 😎. as I already wrote above, I happen to have a Durst enlarger which, with easy conversions, can be used as a copy-stand.\"), \"\\n\", React.createElement(_components.p, null, \"If you choose to buy an enlarger as a copy stand, I recommend Durst M601, which I currently use; it has a 3/8\\\" screw hole, and you can easily mount a tripod ball-head on it.\"), \"\\n\", React.createElement(_components.p, null, \"Another good and more compact alternative is Durst M301 or Durst F30, which sometimes goes cheap on eBay (for 20$).\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/8D006530-E9D4-45BC-B435-2553D5023A09_2/z1EBaZ2oCxsQQpJrm3NYxMaesn4vRZLFkbJBh6zaZocz/Xnip2022-07-07_10-30-57.png\",\n    alt: \"Durst M601\"\n  }), \"\\n\", React.createElement(_components.h4, null, \"Film holder\"), \"\\n\", React.createElement(_components.p, null, \"If you have tried to search film holders, you are probably familiar with film holders from Valoi, Negative Supply, Essential Film holders, Lomography Digitalize, and others. Some of them look very neat, sturdy, and a reliable solution but are not particularly cheap. You can also make DIY it at home from cardboard. Alternatively, there are some 3D model files out there (you can google it), and if you have a 3D printer, you can print it or find the 3d print-shop online and order. I discovered my 3D-printed one on Etsy for 30€, it can only hold 35mm film, but that's enough for me. It's small and affordable, not super great, but usable, and it does its job. I may invest in the Valoi system in the future; let's see.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://res.craft.do/user/full/c1f660f3-6119-a09b-30f1-aebf482da31b/doc/2F264CB5-8622-4E22-97A1-2DAB1ED64B38/BE47976C-05DA-4966-872E-C022FA63F2DF_2/kY7xT1j1y9rW3DIhrShRmTa9zQAvvlJeSkQIeoOnxYEz/il_1588xN.3852146595_wjbs.jpeg\",\n    alt: \"35mm Film holder\"\n  }), \"\\n\", React.createElement(_components.h4, null, \"Light Source\"), \"\\n\", React.createElement(_components.p, null, \"I've searched options for LED light-box to find out which options people are using, and there is a diversity of opinion about it. I just went to my local art supply store and bought a cheap A4 size light-box for tracing paper. You can also use an iPad or iPhone as a light source but try to diffuse it somehow to avoid \\\"screen pixels\\\" appearing on the final image.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"If you accounted newton rings with you light-box, it can be solved by using ARN glass (Anti-Newton).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Tips for the lighting:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Shoot with the emulsive (matte) side of the film facing your camera (it's less reflective)\"), \"\\n\", React.createElement(_components.li, null, \"Use your lens hood (if you have one)\"), \"\\n\", React.createElement(_components.li, null, \"Turn off all ambient lights in the room\"), \"\\n\", React.createElement(_components.li, null, \"Have your aperture on your lens set to around f8.0\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"See more tips about the backlight source: \", React.createElement(_components.a, {\n    href: \"https://forums.negativelabpro.com/t/suggested-backlight-sources-for-scanning-film-with-dslr/130\"\n  }, \"https://forums.negativelabpro.com/t/suggested-backlight-sources-for-scanning-film-with-dslr/130\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"TL, DR;\")), \"\\n\", React.createElement(_components.p, null, \"Here is a picture of my setup; it looks sturdy, feels sturdy, and works great.\"), \"\\n\", React.createElement(_components.p, null, \"Can this be improved? This is a good one, but I can take it further. I already have some ideas to take this scanning setup to the next level using Arduino: to roll the film and automatically take pictures. Also, maybe using an enlarger head as a better-diffused light source in the future, but this scanning setup seems quite enough for me to test the camera scanning experience.\"), \"\\n\", React.createElement(Gallery, {\n    images: [scan_1, scan_2, scan_3, scan_4]\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/shakogegia/Developer/shakogegia.github.io/content/blog/2022-07-07-scanning-film-with-a-digital-camera/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  console.log(\"🚀 ~ file: post.tsx ~ line 8 ~ Post ~ children\", children);\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-center text-3xl iAWriterDuospaceBold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg iAWriterDuospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight iAWriterDuospaceItalic text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React, { PropsWithChildren } from 'react'\nimport classNames from 'src/utils/classnames'\n\nexport default function Gallery(props: PropsWithChildren<{ images?: string[], className?: string }>) {\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 justify-items-center\">\n        {props.children\n          ? props.children\n          : (props.images || []).map((src) => (\n              <img loading=\"lazy\" key={src} className={classNames(\"rounded-md w-full h-full object-cover\", props.className)} src={src} />\n            ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 iAWriterDuospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","strong","h4","blockquote","ul","li","img","ol","_provideComponents","components","React","href","class","src","width","alt","Gallery","images","scan_1","scan_2","scan_3","scan_4","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","children","console","log","Layout","SEO","title","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","pathname","slug","article","className","date","Share","text","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","map","loading","key","classNames","useStaticQuery","query","IoWaterOutline","IoWater","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}