{"version":3,"file":"component---src-templates-post-tsx-content-file-path-users-shakogegia-developer-shakogegia-github-io-content-blog-2018-01-13-mobile-development-with-react-native-index-mdx-d4d7bff03a967491d8df.js","mappings":"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","sources":["webpack://my-gatsby-site/./content/blog/2018-01-13-mobile-development-with-react-native/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\",\n    img: \"img\",\n    h3: \"h3\",\n    strong: \"strong\",\n    br: \"br\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"React Native lets you build mobile apps using only JavaScript. It uses the same design as React, lets you create truly native apps and doesn't compromise your users' experiences. It provides a core set of platform agnostic native components. Supported platforms : iOS, Android, Apple TV, Desktop.\"), \"\\n\", React.createElement(_components.p, null, \"Philosophy: Learn once, write everywhere\"), \"\\n\", React.createElement(_components.p, null, \"Code sharing between platform 80%-95%\"), \"\\n\", React.createElement(_components.h4, null, \"Showcases\"), \"\\n\", React.createElement(_components.p, null, \"React native has been a while, release in 2015 and gained popularity among developers.\\nThere are quite impressive list of companies using React native\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://github.com/shakogegia/shakogegia.github.io/blob/develop/content/blog/mobile-development-with-react-native/showcase.png?raw=true\",\n    alt: \"showcase\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"Advantages of React Native\"), \"\\n\", React.createElement(_components.p, null, \"Developing cross-platform apps has its advantages compare to Native development.\\nDevelopers who are already experienced with Javascript will find React Native is a great choice.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Faster speed of development\"), React.createElement(_components.br), \"\\n\", \"Same codebase across platforms (Especially if web app is already done.)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Lower cost\"), React.createElement(_components.br), \"\\n\", \"No need of hiring separate teams for making app per platform\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"OTA (bypass App Store / Play Store)\"), React.createElement(_components.br), \"\\n\", \"Instant updates is thing that I would mention as benefit for cross-platform development.\", React.createElement(_components.br), \"\\n\", \"Every update needs time to be deployed to the store (Apple takes minimum 2 days to publish new update)\\nUsing React Native you can bypass verification process from publisher and deliver update to end user instantly\"), \"\\n\", React.createElement(_components.p, null, \"Also there is also a very steady increase in the number of production and open source apps written using React Native.\"), \"\\n\", React.createElement(_components.h3, null, \"Advantages of Native Development\"), \"\\n\", React.createElement(_components.p, null, \"We know that Javascript is fast, but Java, ObjC / Swift are faster especially for heavy calculations. Itâ€™s a known fact that JavaScript code is not as efficient for calculation-intensive tasks, and there is an overhead when JavaScript is controlling native elements.\"), \"\\n\", React.createElement(_components.p, null, \"JavaScript has a single dedicated device thread, while native code is free to use whatever threads it wants. In performance, React Native stays behind an optimized native application.\"), \"\\n\", React.createElement(_components.p, null, \"If your app is not doing any hugely heavy lifting (i.e. in terms of heavy memory or CPU usage) React Native seems like a really good choice. Having worked with both hybrid and native platforms before, if your app is doing a ton of heavy lifting, I would still recommend native development as a way to more closely manage things like CPU usage and memory footprint.\"), \"\\n\", React.createElement(_components.h4, null, \"Constant updates to the platform\"), \"\\n\", React.createElement(_components.p, null, \"React Native is a relatively young and emerging platform. Whereas Native development is quite mature. iOS(ObjC) and Android(Java) have been on the go for close to 10 years and there some really great tools that have developed in that time. This is not really a disadvantage but rather another point that React Native has a lot of catching up to do.\"), \"\\n\", React.createElement(_components.p, null, \"Due to its relatively new entrance React Native is heavily in development, and a new version is released every month.\\nConstant updates bring new ported native components, improved custom ones (like the Navigator), bug fixes and performance improvements. This is good in terms of activeness of the platform. But a bad choice if the app is to be maintained for a long-term as each build might require updating the platform which brings dependency checking for existing code base.\"), \"\\n\", React.createElement(_components.p, null, \"Incorporating these new releases requires vigilant updates to our own code if the logic of the prebuilt components changes. So developers will have to set aside some effort to incorporate these changes in order to keep up with the platform. Many people take up React Native fully understanding this situation. But if you are consulting for a client make sure that they understand this fact.\"), \"\\n\", React.createElement(_components.h4, null, \"Loosely-typed language\"), \"\\n\", React.createElement(_components.p, null, \"React Native uses JavaScript code, CSS-like stylesheets and HTML-like tags for layout.\\nThe good side is that we get to use all the better aspects of JavaScript but of course, the bad side is that it brings some of the horrors of Javascript.\\nUnlike Java and Swift, Javascript does not enforce a type of variables and parameters to functions. That is, any variable can be anything at any time. Developers need to follow the discipline and standards that they practice in their strongly-typed native programming language\"), \"\\n\", React.createElement(_components.h4, null, \"Native Language Dependency\"), \"\\n\", React.createElement(_components.p, null, \"If a functionality that you require isnâ€™t currently available in React Native, you will end up writing native modules.\\nNative modules are a way of bridging native code and React Native code.\\nThe native module needs to be written in Java and Swift/Objective C. Possibly, at some point during your development you have to take help from a native developer or do it yourself in the native language.\"), \"\\n\", React.createElement(_components.h3, null, \"Google Trends\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/shakogegia/shakogegia.github.io/develop/content/blog/mobile-development-with-react-native/google_trends.png\",\n    alt: \"google_trends\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Red: Swift\", React.createElement(_components.br), \"\\n\", \"Blue: React Native\"), \"\\n\", React.createElement(_components.h2, null, \"How React Native Works\"), \"\\n\", React.createElement(_components.p, null, \"There are two important threads running in each React Native application.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Main thread\"), \" which also runs in each standard native app. It handles displaying the elements of the user interface and processes user gestures.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"JS Thread (React Native)\"), \" Executes the JavaScript code in a separate JavaScript engine. The JavaScript deals with the business logic of the application. It also defines the structure and the functionalities of the user interface.\\nThese two threads never communicate directly and never block each other.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://github.com/shakogegia/shakogegia.github.io/blob/develop/content/blog/mobile-development-with-react-native/layers.png?raw=true\",\n    alt: \"layers\"\n  }), \"\\n\", React.createElement(_components.h4, null, \"Threads Interaction\"), \"\\n\", React.createElement(_components.p, null, \"Between these two threads is the so-called bridge, which is the core of React Native. The bridge has three important characteristics.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Asynchronous\"), \" It enables asynchronous communication between the threads. This ensures that they never block each other.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Batched\"), \" It transfers messages from one thread to the other in an optimised way.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Serializable\"), \" The two threads never share or operate with the same data. Instead, they exchange serialized messages.\"), \"\\n\", React.createElement(_components.h2, null, \"React Native for Web Developers\"), \"\\n\", React.createElement(_components.p, null, \"React native is great for web developers, especially if you already are familiar with React.js\"), \"\\n\", React.createElement(_components.p, null, \"Web UI Primitives have their \\\"equivalents\\\" in React Native, for example:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"<div /> === <View />\\n<input /> === <TextInput>\\n<img /> === <Image />\\n<button /> === <Button />\\n\")), \"\\n\", React.createElement(_components.p, null, \"But unlike Web, UI primitives not living in global scope, you must import them\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"import { View, Image, TextInput, Button } from 'react-native'\\n\")), \"\\n\", React.createElement(_components.h4, null, \"Differences between Web / React Native\"), \"\\n\", React.createElement(_components.p, null, \"Primitives\\nStyling (based on CSS / Flexbox)\\nNavigation\\nUnlike web, not every component has every interaction\\nTouchable Components\\nButton, TouchableOpacity, TouchableHighlight, TouchableWithoutFeedback\\nPanResponder - reconciles several touches into a single gesture\"), \"\\n\", React.createElement(_components.p, null, \"we dont have window object, window push history API\"), \"\\n\", React.createElement(_components.p, null, \"No id, or class, title attributes\\nfor example: \", React.createElement(\"div\"), \" can be clickable\"), \"\\n\", React.createElement(_components.p, null, \"Handful touchable components because of devices\"), \"\\n\", React.createElement(_components.p, null, \"Large selection of touchables\"), \"\\n\", React.createElement(_components.p, null, \"It makes single-touch gestures resilient to extra touches\"), \"\\n\", React.createElement(_components.p, null, \"Can be used to recognize simple multi-touch gestures\"), \"\\n\", React.createElement(_components.h3, null, \"Build your first React Native app\"), \"\\n\", React.createElement(_components.p, null, \"React Native CLI\\nCreate React Native CLI (Merged with Expo CLI)\"), \"\\n\", React.createElement(_components.p, null, \"Getting started\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ npm i -g react-native\\n$ react-native init MyFirstProject\\n$ cd MyFirstProject\\n$ react-native run-ios\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"$ npm i -g expo-cli\\n$ expo init MyFirstProject\\n$ cd MyFirstProject\\n$ expo start\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Expo over React Native CLI\"), \"\\n\", React.createElement(_components.p, null, \"Expo is a set of tools, libraries and services which let you build native iOS and Android apps by writing JavaScript.\\nThe SDK is a native-and-JS library which provides access to the device's system functionality (things like the camera, contacts, local storage, and other hardware).\\nExpo also provides UI components.e.g. icons, blur views, and more.\\nExpo SDK provides access to services:\\nExpo can manage your Assets for you\\nPush Notifications\\nBuild native binaries which are ready to deploy to the app store.\\nOTA\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/shakogegia/Developer/shakogegia.github.io/content/blog/2018-01-13-mobile-development-with-react-native/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-center text-3xl iAWriterDuospaceBold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg iAWriterDuospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight iAWriterDuospaceItalic text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 iAWriterDuospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h4","img","h3","strong","br","h2","pre","code","_provideComponents","components","React","src","alt","className","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","children","Layout","SEO","title","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","pathname","slug","article","date","Share","text","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","query","IoWaterOutline","IoWater","href","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}