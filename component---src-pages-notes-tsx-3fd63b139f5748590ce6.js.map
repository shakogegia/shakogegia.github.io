{"version":3,"file":"component---src-pages-notes-tsx-3fd63b139f5748590ce6.js","mappings":"6KAUe,SAASA,EAAK,GAAqD,IAArD,MAAEC,EAAK,KAAEC,EAAI,MAAEC,EAAK,UAAEC,EAAS,SAAEC,GAAiB,EAC7E,OACEC,EAAAA,cAAAA,MAAAA,CAAKF,WAAWG,EAAAA,EAAAA,GAAW,8CAA+CH,IACxEE,EAAAA,cAAAA,MAAAA,CAAKF,UAAU,wDACZF,GAAQI,EAAAA,cAAAA,OAAAA,CAAMF,WAAWG,EAAAA,EAAAA,GAAW,oCAAqCJ,IAASD,GAEnFI,EAAAA,cAAAA,KAAAA,CAAIF,UAAU,iDAAiDH,GAC/DK,EAAAA,cAAAA,KAAAA,CAAIF,UAAU,+CAA+CC,IAIrE,C,oICde,SAASG,EAAU,GAA2B,IAAzBC,MAAM,OAAEC,IAAe,EACzD,MAAMC,EAAQD,EAAOE,MAAMC,KAAKC,GAAcA,EAAKC,OAAMC,QAAQC,QAAuBC,IAATD,IAE/E,OACEX,EAAAA,cAACa,EAAAA,EAAM,KACLb,EAAAA,cAACc,EAAAA,EAAG,CAACnB,MAAM,UAEXK,EAAAA,cAACN,EAAAA,EAAI,CAACC,MAAM,gBAAgBE,MAAM,kBAAkBD,KAAMI,EAAAA,cAAAA,OAAAA,KAAAA,OAAgB,mBAI1EA,EAAAA,cAAAA,MAAAA,CAAKF,UAAU,oBACbE,EAAAA,cAACe,EAAAA,EAAAA,IAAU,CACTjB,UAAU,gCACVkB,QAAQ,SACRC,QAAQ,OACRC,YAAY,OACZC,SAAU,CAAEC,MAAM,GAClBC,SAAU,CACRC,OAAQ,CAAC,EACTC,KAAM,CACJC,WAAY,CACVC,gBAAiB,QAKtBpB,EAAME,KAAKI,GACVX,EAAAA,cAACe,EAAAA,EAAAA,IAAU,CACTW,IAAKf,EAAKgB,GACVN,SAAU,CAAEC,OAAQ,CAAEM,QAAS,EAAGC,GAAI,IAAMN,KAAM,CAAEK,QAAS,EAAGC,EAAG,EAAGL,WAAY,CAAEM,KAAM,aAE1F9B,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAE,IAAMrB,EAAKsB,YAAYC,KAAQpC,UAAU,iCAC/CE,EAAAA,cAAAA,KAAAA,CAAIF,UAAU,oFACXa,EAAKsB,YAAYtC,OAEpBK,EAAAA,cAAAA,UAAAA,CAASF,UAAU,qFAChBa,EAAKwB,eASxB,C","sources":["webpack://my-gatsby-site/./src/components/layout/hero.tsx","webpack://my-gatsby-site/./src/pages/notes.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react'\nimport classNames from 'src/utils/classnames'\n\ntype Props = PropsWithChildren<{\n  title: string\n  color?: string\n  icon?: React.ReactNode\n  className?: string\n}>\n\nexport default function Hero({ title, icon, color, className, children }: Props) {\n  return (\n    <div className={classNames(\"flex flex-col align-center text-center mt-4\", className)}>\n      <div className=\"flex flex-col align-center text-center font-duospace\">\n        {icon && <span className={classNames(\"text-9xl flex justify-center mb-6\", color)}>{icon}</span>}\n\n        <h2 className=\"text-3xl transition-colors dark:text-gray-200\">{title}</h2>\n        <h6 className=\"mt-6 text-md max-w-md mx-auto text-gray-500\">{children}</h6>\n      </div>\n    </div>\n  )\n}\n","import { motion } from 'framer-motion'\nimport * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout/main'\nimport SEO from '../components/seo'\nimport Hero from 'src/components/layout/hero'\n\nexport default function NotesPage({ data: { allMdx } }: any) {\n  const posts = allMdx.edges.map((edge: any) => edge.node).filter((post: any) => post !== undefined)\n\n  return (\n    <Layout>\n      <SEO title=\"Notes\" />\n\n      <Hero title=\"Digital Notes\" color=\"text-indigo-500\" icon={<span>ðŸ“œ</span>}>\n        notes on things\n      </Hero>\n\n      <div className=\"max-w-3xl m-auto\">\n        <motion.div\n          className=\"mt-12 flex flex-col space-y-8\"\n          initial=\"hidden\"\n          animate=\"show\"\n          whileInView=\"show\"\n          viewport={{ once: true }}\n          variants={{\n            hidden: {},\n            show: {\n              transition: {\n                staggerChildren: 0.15,\n              },\n            },\n          }}\n        >\n          {posts.map((post: any) => (\n            <motion.div\n              key={post.id}\n              variants={{ hidden: { opacity: 0, y: -10 }, show: { opacity: 1, y: 0, transition: { type: 'spring' } } }}\n            >\n              <Link to={`/${post.frontmatter.slug}`} className=\"space-y-2 group font-duospace\">\n                <h3 className=\"text-xl font-semibold group-hover:underline transition-colors dark:text-gray-300\">\n                  {post.frontmatter.title}\n                </h3>\n                <article className=\"max-w-none text-gray-500 group-hover:text-gray-700 dark:group-hover:text-gray-400\">\n                  {post.excerpt}\n                </article>\n              </Link>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(filter: { frontmatter: { published: { ne: false } } }, sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          id\n          fields {\n            title\n            slug\n            date\n          }\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            banner {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            slug\n            keywords\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Hero","title","icon","color","className","children","React","classNames","NotesPage","data","allMdx","posts","edges","map","edge","node","filter","post","undefined","Layout","SEO","motion","initial","animate","whileInView","viewport","once","variants","hidden","show","transition","staggerChildren","key","id","opacity","y","type","Link","to","frontmatter","slug","excerpt"],"sourceRoot":""}