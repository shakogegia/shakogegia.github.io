{"version":3,"file":"component---src-templates-post-tsx-content-file-path-home-runner-work-shakogegia-github-io-shakogegia-github-io-content-blog-2022-06-15-starting-digital-garden-index-mdx-dbf6ca74cf3e8bb1f7b2.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/gif-tip.tsx","webpack://my-gatsby-site/./content/blog/2022-06-15-starting-digital-garden/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React, { useState, useRef, PropsWithChildren } from 'react'\nimport classNames from '../utils/classnames'\n\nexport default function GifTip(props: PropsWithChildren<{ url: string }>) {\n  const [isVisible, setIsVisible] = useState(false)\n  const imgEl = useRef<HTMLImageElement>(null)\n\n  const onMouseEnter = () => {\n    setIsVisible(true)\n  }\n\n  const onMouseLeave = () => {\n    setIsVisible(false)\n  }\n\n  const onMouseMove = (e: React.MouseEvent) => {\n    if (imgEl.current) {\n      imgEl.current.style.top = `${e.clientY}px`\n      imgEl.current.style.left = `${e.clientX}px`\n    }\n  }\n\n  return (\n    <span\n      className={classNames(\n        \"relative inline-block cursor-none font-bold\",\n        \"after:content-[' '] after:h-0.5 after:w-full after:absolute after:bottom-0 after:left-0 after:bg-gradient-to-r after:from-pink-400 after:to-indigo-600\",\n      )}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseMove={onMouseMove}\n    >\n      {props.children}\n      {isVisible && (\n        <img\n          src={props.url}\n          alt={'img'}\n          className={\"fixed z-[1] pointer-events-none rounded-lg max-w-xs max-h-xs -translate-x-1/2 -translate-y-1/2\"}\n          ref={imgEl}\n        />\n      )}\n    </span>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport GifTip from \"src/components/gif-tip\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"We all have some topic we'd like to discuss publicly or express our thoughts. We get down with our laptops and start writing a ‚Äúblog,‚Äù but then something comes up, and we rethink, strive to perfect every aspect, and create drafts instead of publishing. Yes, from time to time, we might feel guilty about drafts hanging there and waiting to be published, but what can we do about it? Nothing ü§∑‚Äç‚ôÇÔ∏è it's not yet ready for publishing. What will the readers say if I post them \\\"unfinished\\\"? And the drafts section continues to grow...\"), \"\\n\", React.createElement(_components.p, null, \"This is what makes me sick of the \", React.createElement(GifTip, {\n    url: \"https://media2.giphy.com/media/3oKIPnAiaMCws8nOsE/giphy.gif\"\n  }, \"blogging idea\"), \", and I decided to try ‚Äúdigital gardening‚Äù instead. Here I can do whatever I want, whenever I want, just as if this was my physical garden. This space, this garden, is all mine. I will try some ideas and write notes about things I like, stuff I explore, and what interests me, regardless of the hobbies I have. Mostly this will touch on programming, books, art, and photography, but these are not the constraints I can't fence; I will share thoughts and notes about anything. This does not preclude me from polishing articles as much as I desire üòé. Remember, this is my garden built for me. As \", React.createElement(_components.a, {\n    href: \"https://joelhooks.com\"\n  }, \"Joel Hook\"), \" said:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"It's my garden, but I'm happy for you to hang around and eat tomatos with me.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The whole point of gardening to me is that you can write down ideas you are thinking of and give it the written form of life, which is a big deal, let the others provide you with feedback and thoughts about it, and take it to the next level, develop it.\"), \"\\n\", React.createElement(_components.p, null, \"Of course, there are things to be put in order, but it will be fun to do some gardening in the evening on my iPad in the cafes or the park üë®‚Äçüåæ\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/shakogegia.github.io/shakogegia.github.io/content/blog/2022-06-15-starting-digital-garden/index.mdx\";\nimport {motion} from 'framer-motion';\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-left lg:text-center text-3xl leading-10 font-duospace-bold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(motion.div, {\n    initial: \"hidden\",\n    animate: \"show\",\n    whileInView: \"show\",\n    variants: {\n      hidden: {\n        opacity: 0,\n        y: -10\n      },\n      show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n          type: 'spring'\n        }\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg font-duospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children)), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight font-mono text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 font-duospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["GifTip","props","isVisible","setIsVisible","useState","imgEl","useRef","React","className","classNames","onMouseEnter","onMouseLeave","onMouseMove","e","current","style","top","clientY","left","clientX","children","src","url","alt","ref","_createMdxContent","_components","Object","assign","p","a","blockquote","_provideComponents","components","href","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","Layout","SEO","title","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","pathname","slug","article","motion","initial","animate","whileInView","variants","hidden","opacity","y","show","transition","type","date","Share","text","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","query","IoWaterOutline","IoWater","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}