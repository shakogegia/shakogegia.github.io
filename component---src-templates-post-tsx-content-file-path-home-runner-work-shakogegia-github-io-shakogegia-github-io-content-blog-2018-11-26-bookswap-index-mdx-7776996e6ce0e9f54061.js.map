{"version":3,"file":"component---src-templates-post-tsx-content-file-path-home-runner-work-shakogegia-github-io-shakogegia-github-io-content-blog-2018-11-26-bookswap-index-mdx-7776996e6ce0e9f54061.js","mappings":"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","sources":["webpack://my-gatsby-site/./content/blog/2018-11-26-bookswap/index.mdx","webpack://my-gatsby-site/./src/templates/post.tsx","webpack://my-gatsby-site/./src/components/share.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"BookSwap is the convenient platform in Georgia for people, who wants to find, swap, sell or buy second-hand books.\"), \"\\n\", React.createElement(_components.p, null, \"Swap/Sell second-hand books is quit actual in Tbilisi (Georgia).\"), \"\\n\", React.createElement(_components.p, null, \"Main idea, why I created BookSwap is that, the only way people could swap second-hand books in Tbilisi (Georgia) was though the Facebook Groups.\"), \"\\n\", React.createElement(_components.p, null, \"I personally tried this types of groups/forums and had a conclusion: even though Facebook group served us well long time and helped interested people connect each other, I had feeling that and I missed some functionality I wanted.\"), \"\\n\", React.createElement(_components.p, null, \"Facebook groups has its disadvantages, for example its impossible to make track of wanted book and get notified if someone sells or wants to swap it.\"), \"\\n\", React.createElement(_components.p, null, \"Its hard to find/search desireable book though the wall of hundreds of posts.\"), \"\\n\", React.createElement(_components.p, null, \"Thats why I created this side project called BookSwap.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/shakogegia.github.io/shakogegia.github.io/content/blog/2018-11-26-bookswap/index.mdx\";\nimport {motion} from 'framer-motion';\nimport * as React from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport Share from 'src/components/share';\nfunction Post(_ref) {\n  var _mdx$frontmatter$bann, _mdx$frontmatter$bann2;\n  let {data: {site, mdx}, pageContext: {next, prev}, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(SEO, {\n    title: mdx.frontmatter.title,\n    description: mdx.excerpt,\n    image: (_mdx$frontmatter$bann = mdx.frontmatter.banner) === null || _mdx$frontmatter$bann === void 0 ? void 0 : (_mdx$frontmatter$bann2 = _mdx$frontmatter$bann.childImageSharp) === null || _mdx$frontmatter$bann2 === void 0 ? void 0 : _mdx$frontmatter$bann2.fluid.src,\n    pathname: \"/\" + mdx.frontmatter.slug,\n    article: true\n  }), React.createElement(\"div\", {\n    className: \"max-w-3xl m-auto mt-8\"\n  }, React.createElement(\"h3\", {\n    className: \"text-left lg:text-center text-3xl leading-10 font-duospace-bold transition-colors dark:text-gray-200\"\n  }, mdx.frontmatter.title), React.createElement(motion.div, {\n    initial: \"hidden\",\n    animate: \"show\",\n    whileInView: \"show\",\n    variants: {\n      hidden: {\n        opacity: 0,\n        y: -10\n      },\n      show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n          type: 'spring'\n        }\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"prose max-w-none mt-10 prose-lg font-duospace text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\"\n  }, children)), React.createElement(\"div\", {\n    className: \"mt-14\"\n  }, React.createElement(\"em\", {\n    className: \"font-extralight font-mono text-gray-400\"\n  }, \"Published on \", mdx.frontmatter.date)), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(\"div\", {\n    className: \"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"\n  })), React.createElement(\"div\", {\n    className: \"py-20\"\n  }, React.createElement(Share, {\n    text: mdx.frontmatter.title,\n    url: \"/\" + mdx.frontmatter.slug\n  }))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"470471436\";\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { IoWaterOutline, IoWater } from 'react-icons/io5'\n\nexport default function Share(props: { url: string, text: string }) {\n  const { site } = useStaticQuery(query)\n\n  return (\n    <div className=\"flex justify-center mx-auto max-w-sm\">\n      <div className='flex flex-col items-center text-center space-y-3 group'>\n        <div>\n          <IoWaterOutline className='text-3xl text-gray-600 block group-hover:hidden' />\n          <IoWater className='text-3xl text-gray-600 hidden group-hover:block' />\n        </div>\n        <a\n          className='text-xl text-gray-600 font-duospace'\n          href={`https://twitter.com/intent/tweet?url=${site?.siteMetadata?.siteUrl}${encodeURIComponent(props.url)}&text=${encodeURIComponent(\n            props.text,\n          )}&via=${site?.siteMetadata?.twitterUsername.replace('@', '')}`}\n        >\n          <span className='underline'>Click here</span> to share this article with your followers on Twitter if you liked it.\n        </a>\n        <span className='font-mono text-sm text-gray-500'>Help this note with watering to grow.</span>\n      </div>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","Post","_ref","_mdx$frontmatter$bann","_mdx$frontmatter$bann2","data","site","mdx","pageContext","next","prev","children","Layout","SEO","title","frontmatter","description","excerpt","image","banner","childImageSharp","fluid","src","pathname","slug","article","className","motion","initial","animate","whileInView","variants","hidden","opacity","y","show","transition","type","date","Share","text","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","query","IoWaterOutline","IoWater","href","siteMetadata","_site$siteMetadata","siteUrl","encodeURIComponent","_site$siteMetadata2","twitterUsername","replace","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}