{"version":3,"file":"ffa65388c11d31b6c1f2581f48e7b93ff0cd350e-e5dc71590031bcb1a997.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/js/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = timestamp - startTime;\n        }\n        // Rebase on delay\n        currentTime = Math.max(currentTime - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = currentTime >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            playState = \"finished\";\n            onComplete && onComplete();\n            animationDriver && animationDriver.stop();\n        }\n        return state;\n    };\n    const play = () => {\n        animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        get currentTime() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set currentTime(newTime) {\n            if (holdTime !== null || !animationDriver) {\n                holdTime = 0;\n            }\n            else {\n                startTime =\n                    animationDriver.now() - secondsToMilliseconds(newTime);\n            }\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set currentTime(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            stop: () => { },\n            currentTime: 0,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get currentTime() {\n        return this.animations[0].currentTime;\n    }\n    /**\n     * currentTime assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set currentTime(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].currentTime = time;\n        }\n    }\n    stop() {\n        this.animations.forEach((controls) => controls.stop());\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","animationDriver","generatorFactory","mapNumbersToKeyframes","generator","mirroredGenerator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","currentTime","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","play","newTime","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","delayBy","setValue","createInstantAnimation","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","GroupPlaybackControls","controls","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}